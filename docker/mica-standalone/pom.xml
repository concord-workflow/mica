<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ca.ibodrov.mica</groupId>
        <artifactId>mica</artifactId>
        <version>0.0.31-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <groupId>ca.ibodrov.mica.docker</groupId>
    <artifactId>mica-standalone</artifactId>
    <packaging>pom</packaging>

    <properties>
        <docker.skip>true</docker.skip>
        <docker.image>concordworkflow/mica-standalone</docker.image>
        <docker.platforms>linux/amd64</docker.platforms>
        <docker.loadOrPush>load</docker.loadOrPush>
        <jdk.version>21</jdk.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>ca.ibodrov.mica</groupId>
            <artifactId>mica-standalone</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${docker.skip}</skip>
                    <dotGitDirectory>${maven.multiModuleProjectDirectory}/.git</dotGitDirectory>
                    <generateGitPropertiesFile>false</generateGitPropertiesFile>
                    <injectAllReactorProjects>true</injectAllReactorProjects>
                    <includeOnlyProperties>
                        <includeOnlyProperty>git.commit.id.describe</includeOnlyProperty>
                    </includeOnlyProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-deps</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <skip>${docker.skip}</skip>
                            <outputDirectory>${project.build.directory}/deps</outputDirectory>
                            <excludeGroupIds>ca.ibodrov.mica</excludeGroupIds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-release</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <skip>${docker.skip}</skip>
                            <outputDirectory>${project.build.directory}/release</outputDirectory>
                            <includeGroupIds>ca.ibodrov.mica</includeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>mica-standalone-build</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${docker.skip}</skip>
                            <executable>docker</executable>
                            <workingDirectory>${project.build.directory}/../</workingDirectory>
                            <arguments>
                                <argument>buildx</argument>
                                <argument>build</argument>
                                <argument>-t</argument>
                                <argument>${docker.image}:${git.commit.id.describe}</argument>
                                <argument>--platform=${docker.platforms}</argument>
                                <argument>--${docker.loadOrPush}</argument>
                                <argument>-f</argument>
                                <argument>./Dockerfile</argument>
                                <argument>.</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
